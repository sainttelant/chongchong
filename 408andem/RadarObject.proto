/// base file  : ObjectLists\RadarObjectMsg.h
syntax = "proto2";

package pb.ObjectLists;

import "header.proto";
/// import "SignalHeader_t.proto";

message RadarObjectData
{
    enum TObjLane
    {
      OBJLANE_UNKNOWN = -99;
      OBJLANE_FAR_LT  =  -2;
      OBJLANE_LT      =  -1;
      OBJLANE_OWN     =   0;
      OBJLANE_RT      =   1;
      OBJLANE_FAR_RT  =   2;
    }

    enum TObjClass
    {
      OBJCLASS_UNKONWN       = 0;
      OBJCLASS_CAR           = 1;
      OBJCLASS_TRUCK         = 2;
      OBJCLASS_BIKE          = 3;
      OBJCLASS_PEDESTRIAN    = 4;
      OBJCLASS_WIDE_OBJECT   = 5;
      OBJCLASS_POINT_OBJECT  = 6;
      OBJCLASS_BRIDGE        = 7;
      OBJCLASS_GUARDRAIL     = 8;
    }

  optional  sint32    obj_roll_count            =   1  [default = 0];                 /// Rolling Counter
  optional  sint32    obj_id                    =   2  [default = 0];                 /// Object ID
  optional  float     obj_long_displ_m          =   3  [default = 0.0];               /// Longitudinal displacement
  optional  float     obj_vrel_long_ms          =   4  [default = 0.0];               /// Relative longitudinal speed
  optional  float     obj_accel_long_ms2        =   5  [default = 0.0];               ///
  optional  sint32    obj_prob_of_exist         =   6  [default = 0];                 /// Object propabiltiy of existence 0:invalid 1:< 25% 2:< 50% 3:< 75% 4:< 90% 5:< 99% 6:< 99,9% 7:< 99,99%
  optional  sint32    obj_dyn_prob              =   7  [default = 0];                 /// 0: unclassified 1: standing 2: stopped 3: moving 4: oncoming
  optional  float     obj_lat_displ_m           =   8  [default = 0.0];               /// Lateral displacement
  optional  sint32    obj_length                =   9  [default = 0];                 /// Object length 0:unknown 1:< 0.5m 2:< 2m 3:< 4m 4:< 6m 5:< 10m 6:< 20m 7:exceeds
  optional  sint32    obj_width                 =  10  [default = 0];                 /// Object width  0:unknown 1:< 0.5m (pedestrian) 2:< 1m(bike) 3:< 2m(car) 4:< 3m(truck) 5:< 4m 6:< 6m 7:exceeds
  optional  sint32    obj_meas_stat             =  11  [default = 0];                 /// Object measurement status 0:no object 1:new object 2:object not measured 3:object measured
  optional  float     obj_rcs_value_d_bm2       =  12  [default = 0.0];               /// RCS value (radar cross section)
  optional  float     obj_lat_speed_ms          =  13  [default = 0.0];               /// Object lateral velocity. Value negative = obj moves left to right. Value positive = obj moves right to left.
  /// cannot be used as not backward compatible with recordings.
  /// Need to see what we can do.
  optional  sint32    obj_obstacle_probability  =  14  [default = 0];                 ///
  optional  float     obj_f_width               =  15  [default = 1.6666666666];      ///  Float value for width. Available with ARS 353 (301)

  optional  uint32    obj_of_interest           =  16  [default = 0];                 /// 0:no object of interest; 1:object of interest (6 ACC objects)
  optional  TObjLane  obj_lane                  =  17  [default = OBJLANE_UNKNOWN];   /// TObjLane
  optional  TObjClass obj_class                 =  18  [default = OBJCLASS_UNKONWN];  /// TObjClass
  optional  float     obj_long_displ_m_std      =  19  [default = 0.0];               /// standard deviation of  longitudinal displacement in [m]
  optional  float     obj_lat_displ_m_std       =  20  [default = 0.0];               /// standard deviation of  lateral displacement in [m]
  optional  float     obj_vrel_long_ms_std      =  21  [default = 0.0];               /// standard deviation of relative longitudinal speed in [m/s]
  optional  float     obj_lat_speed_ms_std      =  22  [default = 0.0];               /// standard deviation of relative lateral speed in [m/s]
  optional  float     obj_accel_long_ms2_std    =  23  [default = 0.0];               /// standard deviation of relative longitudinal acceleration in [m/sï¿½]
}

message RadarStatus
{
  optional  bool    radar_CanRXErr            = 1;  //CAN Receive Error
  optional  bool    radar_HWFltPrsnt          = 2;  // Radar Hardware Fault.
}

message RadarObject
{
  optional  pb.Header        header     =  1;  ///  common message header
  repeated  RadarObjectData  data       =  2;  ///
  optional  RadarStatus      status     =  3;
}
